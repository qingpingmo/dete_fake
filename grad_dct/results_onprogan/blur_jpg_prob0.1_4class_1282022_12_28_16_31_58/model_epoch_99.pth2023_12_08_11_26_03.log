Dataroot /opt/data/private/rstao/code/DeepfakeDetection/datasets/CNNDetection/CNN_synth_testset
Model_path checkpoints/blur_jpg_prob0.1_4class_1282022_12_28_16_31_58/model_epoch_99.pth
2023_12_08_11_26_06
> /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(14)validate()
-> y_true, y_pred = [], []
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(15)validate()
-> for img, label in data_loader:
(Pdb) <torch.utils.data.dataloader.DataLoader object at 0x7f7bd4953760>
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(16)validate()
-> in_tens = img.cuda()
(Pdb) tensor([[[[-1.0390, -1.0390, -1.0562,  ..., -1.1247, -1.1247, -1.0904],
          [-1.0390, -1.0390, -1.0562,  ..., -1.1247, -1.1247, -1.1247],
          [-1.0219, -1.0390, -1.0562,  ..., -1.1247, -1.1247, -1.1247],
          ...,
          [-0.6452, -0.5767, -1.7754,  ..., -2.0665, -2.0837, -2.0665],
          [-0.5938, -0.5938, -2.1179,  ..., -2.0837, -2.0837, -2.0837],
          [-1.4843, -1.8097, -2.1008,  ..., -2.0837, -2.0837, -2.0837]],

         [[ 0.3978,  0.3978,  0.3803,  ...,  0.1352,  0.1352,  0.1702],
          [ 0.3978,  0.3978,  0.3803,  ...,  0.1352,  0.1352,  0.1352],
          [ 0.3978,  0.3978,  0.3803,  ...,  0.1352,  0.1352,  0.1352],
          ...,
          [-0.5826, -0.4951, -1.7206,  ..., -2.0182, -2.0182, -2.0182],
          [-0.5476, -0.5301, -2.0357,  ..., -2.0357, -2.0357, -2.0357],
          [-1.4405, -1.7731, -2.0357,  ..., -2.0357, -2.0357, -2.0357]],

         [[ 1.5245,  1.5245,  1.5071,  ...,  1.3502,  1.3502,  1.3851],
          [ 1.5245,  1.5245,  1.5071,  ...,  1.3502,  1.3502,  1.3502],
          [ 1.5245,  1.5245,  1.5071,  ...,  1.3502,  1.3502,  1.3502],
          ...,
          [-0.3055, -0.2010, -1.4384,  ..., -1.7522, -1.7696, -1.7522],
          [-0.2532, -0.2532, -1.8044,  ..., -1.7696, -1.7696, -1.7696],
          [-1.1421, -1.4733, -1.7870,  ..., -1.7696, -1.7696, -1.7696]]],


        [[[-1.8268, -1.8268, -1.8268,  ..., -1.6727, -1.6727, -1.6727],
          [-1.8268, -1.8268, -1.8268,  ..., -1.6727, -1.6727, -1.6727],
          [-1.8268, -1.8268, -1.8268,  ..., -1.6727, -1.6727, -1.6727],
          ...,
          [-1.4500, -1.4500, -1.4500,  ..., -1.1075, -1.1075, -1.1247],
          [-1.4500, -1.4500, -1.4500,  ..., -1.1247, -1.1418, -1.1418],
          [-1.4500, -1.4500, -1.4500,  ..., -1.1247, -1.1418, -1.1589]],

         [[-1.7556, -1.7556, -1.7556,  ..., -1.5630, -1.5630, -1.5630],
          [-1.7556, -1.7556, -1.7556,  ..., -1.5630, -1.5630, -1.5630],
          [-1.7556, -1.7556, -1.7556,  ..., -1.5630, -1.5630, -1.5630],
          ...,
          [-1.3880, -1.3880, -1.3880,  ..., -1.0378, -1.0378, -1.0553],
          [-1.3880, -1.3880, -1.3880,  ..., -1.0028, -1.0203, -1.0203],
          [-1.3880, -1.3880, -1.3880,  ..., -1.0028, -1.0203, -1.0378]],

         [[-1.3861, -1.3861, -1.3861,  ..., -1.1421, -1.1421, -1.1421],
          [-1.3861, -1.3861, -1.3861,  ..., -1.1421, -1.1421, -1.1421],
          [-1.3861, -1.3861, -1.3861,  ..., -1.1421, -1.1421, -1.1421],
          ...,
          [-1.2293, -1.2293, -1.2293,  ..., -0.8807, -0.8807, -0.8981],
          [-1.2293, -1.2293, -1.2293,  ..., -0.8633, -0.8807, -0.8807],
          [-1.2293, -1.2293, -1.2293,  ..., -0.8633, -0.8807, -0.8981]]],


        [[[ 1.0331,  1.0844,  1.0844,  ...,  1.4098,  1.4098,  1.4098],
          [ 0.9988,  1.0159,  1.0159,  ...,  1.4098,  1.4098,  1.4098],
          [ 0.9646,  0.9817,  0.9817,  ...,  1.4440,  1.4440,  1.4440],
          ...,
          [-1.4500, -1.5014, -1.9295,  ..., -1.5185, -1.3815, -1.7240],
          [-1.7240, -1.3644, -1.1932,  ..., -1.0562, -1.0904, -1.1932],
          [-0.8678, -1.0048, -1.3473,  ..., -1.1075, -1.1075, -1.3302]],

         [[ 1.3431,  1.3782,  1.3782,  ...,  1.7108,  1.7108,  1.7108],
          [ 1.3256,  1.3256,  1.3256,  ...,  1.7108,  1.7108,  1.7108],
          [ 1.2731,  1.3081,  1.2906,  ...,  1.6758,  1.6758,  1.6758],
          ...,
          [-1.4405, -1.5105, -1.9482,  ..., -1.3354, -1.2479, -1.5980],
          [-1.7206, -1.3880, -1.2129,  ..., -0.8803, -0.9328, -1.0728],
          [-0.8627, -1.0028, -1.3880,  ..., -0.9678, -0.9328, -1.1429]],

         [[ 1.1062,  1.1585,  1.1585,  ...,  1.3154,  1.3154,  1.3154],
          [ 1.0714,  1.0888,  1.0888,  ...,  1.2980,  1.2980,  1.2980],
          [ 1.0365,  1.0539,  1.0539,  ...,  1.2805,  1.2805,  1.2805],
          ...,
          [-1.2641, -1.3164, -1.7696,  ..., -1.0550, -0.9853, -1.3687],
          [-1.5430, -1.1944, -1.0376,  ..., -0.6018, -0.6715, -0.8110],
          [-0.6715, -0.8633, -1.2119,  ..., -0.7238, -0.6890, -0.9156]]],


        ...,


        [[[ 0.5878,  0.6221,  0.6563,  ...,  0.7591,  0.7419,  0.7077],
          [ 0.5707,  0.6049,  0.6049,  ...,  0.6049,  0.6392,  0.6392],
          [ 0.5707,  0.6049,  0.6221,  ...,  0.6392,  0.6392,  0.6392],
          ...,
          [-0.6109, -0.6281, -0.6452,  ..., -0.7822, -0.7993, -0.8335],
          [-0.6965, -0.6794, -0.6794,  ..., -0.7650, -0.7650, -0.7650],
          [-0.6281, -0.6452, -0.6281,  ..., -0.7479, -0.7308, -0.7137]],

         [[ 0.9580,  0.9930,  1.0280,  ...,  1.0805,  1.0805,  1.0280],
          [ 0.9405,  0.9755,  0.9755,  ...,  0.9230,  0.9580,  0.9755],
          [ 0.9405,  0.9755,  0.9930,  ...,  0.9580,  0.9580,  0.9580],
          ...,
          [-0.2850, -0.3025, -0.3200,  ..., -0.4776, -0.4951, -0.5126],
          [-0.3725, -0.3550, -0.3550,  ..., -0.4426, -0.4426, -0.4601],
          [-0.3025, -0.3200, -0.2850,  ..., -0.4251, -0.4076, -0.3901]],

         [[ 1.2631,  1.2980,  1.3328,  ...,  1.4025,  1.4025,  1.3502],
          [ 1.2457,  1.2805,  1.2805,  ...,  1.2457,  1.2631,  1.2805],
          [ 1.2457,  1.2805,  1.2980,  ...,  1.2805,  1.2805,  1.2805],
          ...,
          [ 0.1128,  0.0953,  0.0779,  ..., -0.0441, -0.0615, -0.0790],
          [ 0.0256,  0.0431,  0.0431,  ..., -0.0092, -0.0092, -0.0267],
          [ 0.0953,  0.0779,  0.0953,  ...,  0.0082,  0.0256,  0.0431]]],


        [[[ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          ...,
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489],
          [ 2.2489,  2.2489,  2.2489,  ...,  2.2489,  2.2489,  2.2489]],

         [[ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4286,  2.4286,  2.4286,  ...,  2.4286,  2.4286,  2.4286],
          ...,
          [ 2.4111,  2.4111,  2.4111,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4111,  2.4111,  2.4111,  ...,  2.4286,  2.4286,  2.4286],
          [ 2.4111,  2.4111,  2.4111,  ...,  2.4286,  2.4286,  2.4286]],

         [[ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          ...,
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400],
          [ 2.6400,  2.6400,  2.6400,  ...,  2.6400,  2.6400,  2.6400]]],


        [[[-1.1760, -1.1760, -1.1760,  ..., -1.1418, -1.1418, -1.1418],
          [-1.1760, -1.1760, -1.1760,  ..., -1.1418, -1.1418, -1.1418],
          [-1.1589, -1.1589, -1.1589,  ..., -1.1418, -1.1418, -1.1418],
          ...,
          [-0.3712, -0.3712, -0.3541,  ..., -0.5424,  0.5707,  0.3309],
          [-0.3883, -0.3712, -0.3712,  ..., -1.0904,  0.7248,  0.4851],
          [-0.3712, -0.4226, -0.4054,  ..., -1.8610, -1.6042, -1.4843]],

         [[-0.1099, -0.1099, -0.1099,  ..., -0.0924, -0.0924, -0.0924],
          [-0.1099, -0.1099, -0.1099,  ..., -0.0924, -0.0924, -0.0924],
          [-0.0749, -0.0749, -0.0749,  ..., -0.0924, -0.0924, -0.0924],
          ...,
          [-0.2850, -0.2850, -0.2675,  ..., -0.1450,  1.0980,  0.9055],
          [-0.2500, -0.2325, -0.2325,  ..., -0.6877,  1.2381,  1.0280],
          [-0.2325, -0.2850, -0.2675,  ..., -1.5105, -1.1604, -1.0203]],

         [[ 1.4548,  1.4548,  1.4548,  ...,  1.4722,  1.4722,  1.4722],
          [ 1.4548,  1.4548,  1.4548,  ...,  1.4722,  1.4722,  1.4722],
          [ 1.4722,  1.4722,  1.4722,  ...,  1.4722,  1.4722,  1.4722],
          ...,
          [-0.1312, -0.1312, -0.1138,  ..., -0.4973,  0.0779, -0.3230],
          [-0.1138, -0.0964, -0.0964,  ..., -0.9853,  0.3742,  0.0605],
          [-0.0964, -0.1487, -0.1312,  ..., -1.7347, -1.7696, -1.7696]]]])
(Pdb) torch.Size([32, 3, 256, 256])
(Pdb) tensor([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
        0, 0, 0, 0, 0, 0, 0, 0])
(Pdb) torch.Size([32])
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(17)validate()
-> y_pred.extend(model(in_tens).sigmoid().flatten().tolist())
(Pdb) tensor([[-20.6224],
        [-21.8103],
        [-29.0016],
        [-14.1352],
        [-21.9821],
        [-39.6825],
        [-25.4346],
        [-17.9750],
        [-25.2189],
        [-40.4344],
        [-16.9192],
        [-22.6856],
        [-18.0185],
        [-10.4853],
        [-10.6395],
        [-18.5583],
        [-33.4783],
        [-20.3188],
        [-25.8138],
        [-12.0936],
        [-18.0998],
        [-24.3519],
        [-37.7769],
        [-16.3395],
        [-43.2995],
        [-47.5548],
        [-29.3829],
        [-37.8937],
        [-26.3901],
        [-28.3025],
        [-34.8648],
        [-30.7143]], device='cuda:0')
(Pdb) tensor([[1.1061e-09],
        [3.3720e-10],
        [2.5395e-13],
        [7.2640e-07],
        [2.8398e-10],
        [5.8359e-18],
        [8.9932e-12],
        [1.5615e-08],
        [1.1158e-11],
        [2.7513e-18],
        [4.4883e-08],
        [1.4053e-10],
        [1.4951e-08],
        [2.7945e-05],
        [2.3951e-05],
        [8.7142e-09],
        [2.8877e-15],
        [1.4984e-09],
        [6.1549e-12],
        [5.5950e-06],
        [1.3783e-08],
        [2.6552e-11],
        [3.9238e-17],
        [8.0141e-08],
        [1.5677e-19],
        [2.2245e-21],
        [1.7344e-13],
        [3.4911e-17],
        [3.4588e-12],
        [5.1095e-13],
        [7.2175e-16],
        [4.5807e-14]], device='cuda:0')
(Pdb) [1.1061046523153095e-09, 3.372000734191971e-10, 2.5395210565513915e-13, 7.263959105330287e-07, 2.8397745266417473e-10, 5.83585806964481e-18, 8.993175995564151e-12, 1.5615135851021478e-08, 1.1157658998117714e-11, 2.7513483011391794e-18, 4.488291693860447e-08, 1.4053373742495268e-10, 1.4950654048107026e-08, 2.7944744942942634e-05, 2.3950764443725348e-05, 8.714188481917517e-09, 2.8876526312531046e-15, 1.498436152935767e-09, 6.1548791237264755e-12, 5.5950472415133845e-06, 1.3783464147820723e-08, 2.6552425189119155e-11, 3.923800057072251e-17, 8.014135488565444e-08, 1.5677477894004814e-19, 2.224471430449613e-21, 1.7344143428323772e-13, 3.491125039702914e-17, 3.458849092558003e-12, 5.10948596800509e-13, 7.217526450697715e-16, 4.580713859982967e-14]
(Pdb) []
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(18)validate()
-> y_true.extend(label.flatten().tolist())
(Pdb) *** AttributeError: 'list' object has no attribute 'size'
(Pdb) [1.1061046523153095e-09, 3.372000734191971e-10, 2.5395210565513915e-13, 7.263959105330287e-07, 2.8397745266417473e-10, 5.83585806964481e-18, 8.993175995564151e-12, 1.5615135851021478e-08, 1.1157658998117714e-11, 2.7513483011391794e-18, 4.488291693860447e-08, 1.4053373742495268e-10, 1.4950654048107026e-08, 2.7944744942942634e-05, 2.3950764443725348e-05, 8.714188481917517e-09, 2.8876526312531046e-15, 1.498436152935767e-09, 6.1548791237264755e-12, 5.5950472415133845e-06, 1.3783464147820723e-08, 2.6552425189119155e-11, 3.923800057072251e-17, 8.014135488565444e-08, 1.5677477894004814e-19, 2.224471430449613e-21, 1.7344143428323772e-13, 3.491125039702914e-17, 3.458849092558003e-12, 5.10948596800509e-13, 7.217526450697715e-16, 4.580713859982967e-14]
(Pdb) 32
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(15)validate()
-> for img, label in data_loader:
(Pdb) [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(16)validate()
-> in_tens = img.cuda()
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(17)validate()
-> y_pred.extend(model(in_tens).sigmoid().flatten().tolist())
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(18)validate()
-> y_true.extend(label.flatten().tolist())
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(15)validate()
-> for img, label in data_loader:
(Pdb) [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(16)validate()
-> in_tens = img.cuda()
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(17)validate()
-> y_pred.extend(model(in_tens).sigmoid().flatten().tolist())
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(18)validate()
-> y_true.extend(label.flatten().tolist())
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(15)validate()
-> for img, label in data_loader:
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(16)validate()
-> in_tens = img.cuda()
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(17)validate()
-> y_pred.extend(model(in_tens).sigmoid().flatten().tolist())
(Pdb) > /opt/data/private/rstao/code/DeepfakeDetection/CNNDetection/validate.py(18)validate()
-> y_true.extend(label.flatten().tolist())
(Pdb) 